package MagicAgent;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.table.DefaultTableModel;

public class MagicanFrame extends javax.swing.JFrame {

   public MagicanFrame() {
      initComponents();
this.bkTable.getTableHeader().setReorderingAllowed(false);
this.WaitlistTable.getTableHeader().setReorderingAllowed(false);

      updateComponents();
   }

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      buttonGroup1 = new javax.swing.ButtonGroup();
      buttonGroup2 = new javax.swing.ButtonGroup();
      buttonGroup3 = new javax.swing.ButtonGroup();
      Magiclabel = new javax.swing.JLabel();
      Status = new javax.swing.JTabbedPane();
      jPanel1 = new javax.swing.JPanel();
      CnameLabel = new javax.swing.JLabel();
      CnameTextField = new javax.swing.JTextField();
      HolidayComboBox = new javax.swing.JComboBox();
      HolidayLabel = new javax.swing.JLabel();
      BookButton = new javax.swing.JButton();
      StatusText = new javax.swing.JLabel();
      subTabbedPane = new javax.swing.JTabbedPane();
      jPanel3 = new javax.swing.JPanel();
      jScrollPane1 = new javax.swing.JScrollPane();
      bkTable = new javax.swing.JTable();
      jPanel4 = new javax.swing.JPanel();
      jScrollPane4 = new javax.swing.JScrollPane();
      WaitlistTable = new javax.swing.JTable();
      CancelBooking = new javax.swing.JButton();
      jLabel5 = new javax.swing.JLabel();
      add_drop_Panel = new javax.swing.JPanel();
      addMagTextBox = new javax.swing.JTextField();
      jLabel1 = new javax.swing.JLabel();
      addMagButton = new javax.swing.JButton();
      dropMagCbox = new javax.swing.JComboBox();
      jLabel3 = new javax.swing.JLabel();
      DropMagButton = new javax.swing.JButton();
      addHolidayTextField = new javax.swing.JTextField();
      jLabel4 = new javax.swing.JLabel();
      addHolidayButton = new javax.swing.JButton();
      jPanel2 = new javax.swing.JPanel();
      MagicianComboBox1 = new javax.swing.JComboBox();
      jLabel2 = new javax.swing.JLabel();
      HolidayComboBox1 = new javax.swing.JComboBox();
      HolidayLabel1 = new javax.swing.JLabel();
      MagicStatButton = new javax.swing.JButton();
      HolidayStatButton = new javax.swing.JButton();
      waitlistButton = new javax.swing.JButton();
      jScrollPane2 = new javax.swing.JScrollPane();
      resultTable = new javax.swing.JTable();
      jScrollPane3 = new javax.swing.JScrollPane();
      StatusArea = new javax.swing.JTextArea();
      clearButton = new javax.swing.JButton();
      dropText = new javax.swing.JLabel();

      setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
      setBackground(new java.awt.Color(255, 255, 255));

      Magiclabel.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
      Magiclabel.setText("MAGICAN AGENT");

      jPanel1.setBackground(new java.awt.Color(255, 255, 204));

      CnameLabel.setText("Customer name:");

      CnameTextField.setColumns(20);
      CnameTextField.setText("enter name");
      CnameTextField.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            CnameTextFieldActionPerformed(evt);
         }
      });

      HolidayComboBox.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            HolidayComboBoxActionPerformed(evt);
         }
      });

      HolidayLabel.setText("Holiday:");

      BookButton.setText("Book ");
      BookButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            BookButtonActionPerformed(evt);
         }
      });

      bkTable.setModel(new javax.swing.table.DefaultTableModel(
         new Object [][] {
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null}
         },
         new String [] {
            "Magician", "Customer", "Holiday", "TimeStamp"
         }
      ));
      jScrollPane1.setViewportView(bkTable);

      javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
      jPanel3.setLayout(jPanel3Layout);
      jPanel3Layout.setHorizontalGroup(
         jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGap(0, 761, Short.MAX_VALUE)
         .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
               .addContainerGap()
               .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 749, Short.MAX_VALUE)
               .addContainerGap()))
      );
      jPanel3Layout.setVerticalGroup(
         jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGap(0, 187, Short.MAX_VALUE)
         .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
               .addContainerGap()
               .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
      );

      subTabbedPane.addTab("BkTable", jPanel3);

      WaitlistTable.setModel(new javax.swing.table.DefaultTableModel(
         new Object [][] {
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null}
         },
         new String [] {
            "Title 1", "Title 2", "Title 3", "Title 4"
         }
      ));
      jScrollPane4.setViewportView(WaitlistTable);

      javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
      jPanel4.setLayout(jPanel4Layout);
      jPanel4Layout.setHorizontalGroup(
         jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel4Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 762, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      );
      jPanel4Layout.setVerticalGroup(
         jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel4Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
            .addContainerGap())
      );

      subTabbedPane.addTab("Waitlist", jPanel4);

      CancelBooking.setText("Cancel");
      CancelBooking.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            CancelBookingActionPerformed(evt);
         }
      });

      jLabel5.setText("Cancel Selection:");

      javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
      jPanel1.setLayout(jPanel1Layout);
      jPanel1Layout.setHorizontalGroup(
         jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel1Layout.createSequentialGroup()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(jPanel1Layout.createSequentialGroup()
                  .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                           .addGroup(jPanel1Layout.createSequentialGroup()
                              .addGap(314, 314, 314)
                              .addComponent(StatusText))
                           .addComponent(CnameLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                           .addComponent(HolidayLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                           .addComponent(CnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                           .addGroup(jPanel1Layout.createSequentialGroup()
                              .addComponent(HolidayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                              .addComponent(BookButton))))
                     .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(281, 281, 281)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(CancelBooking)))
                  .addGap(0, 206, Short.MAX_VALUE))
               .addGroup(jPanel1Layout.createSequentialGroup()
                  .addContainerGap()
                  .addComponent(subTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
            .addContainerGap())
      );
      jPanel1Layout.setVerticalGroup(
         jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel1Layout.createSequentialGroup()
            .addGap(18, 18, 18)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(CnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(CnameLabel))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(HolidayLabel)
               .addComponent(HolidayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(BookButton))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(subTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(CancelBooking)
               .addComponent(jLabel5))
            .addGap(352, 352, 352)
            .addComponent(StatusText)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      );

      Status.addTab("Book", jPanel1);

      add_drop_Panel.setBackground(new java.awt.Color(153, 255, 255));

      addMagTextBox.setColumns(20);
      addMagTextBox.setText("Enter new magician");
      addMagTextBox.setName(""); // NOI18N

      jLabel1.setText("Enter a New Magician:");

      addMagButton.setText("Add");
      addMagButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            addMagButtonActionPerformed(evt);
         }
      });

      jLabel3.setText("Drop Magician:");

      DropMagButton.setText("Drop");
      DropMagButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            DropMagButtonActionPerformed(evt);
         }
      });

      addHolidayTextField.setText("Enter a new holiday");

      jLabel4.setText("Entera a New Holiday:");

      addHolidayButton.setText("Add");
      addHolidayButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            addHolidayButtonActionPerformed(evt);
         }
      });

      javax.swing.GroupLayout add_drop_PanelLayout = new javax.swing.GroupLayout(add_drop_Panel);
      add_drop_Panel.setLayout(add_drop_PanelLayout);
      add_drop_PanelLayout.setHorizontalGroup(
         add_drop_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(add_drop_PanelLayout.createSequentialGroup()
            .addGap(97, 97, 97)
            .addGroup(add_drop_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
               .addComponent(jLabel1)
               .addComponent(jLabel4)
               .addComponent(jLabel3))
            .addGap(33, 33, 33)
            .addGroup(add_drop_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
               .addComponent(addMagTextBox)
               .addComponent(dropMagCbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(addHolidayTextField))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(add_drop_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(DropMagButton)
               .addComponent(addMagButton)
               .addComponent(addHolidayButton))
            .addContainerGap(195, Short.MAX_VALUE))
      );
      add_drop_PanelLayout.setVerticalGroup(
         add_drop_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(add_drop_PanelLayout.createSequentialGroup()
            .addGap(50, 50, 50)
            .addGroup(add_drop_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(addMagTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(jLabel1)
               .addComponent(addMagButton))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(add_drop_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(addHolidayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(jLabel4)
               .addComponent(addHolidayButton))
            .addGap(18, 18, 18)
            .addGroup(add_drop_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(add_drop_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                  .addComponent(dropMagCbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addComponent(DropMagButton))
               .addComponent(jLabel3))
            .addContainerGap(205, Short.MAX_VALUE))
      );

      Status.addTab("add/drop", add_drop_Panel);

      jPanel2.setBackground(new java.awt.Color(255, 204, 204));

      MagicianComboBox1.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            MagicianComboBox1ActionPerformed(evt);
         }
      });

      jLabel2.setText("Magican:");

      HolidayLabel1.setText("Holiday:");

      MagicStatButton.setText("Status");
      MagicStatButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            MagicStatButtonActionPerformed(evt);
         }
      });

      HolidayStatButton.setText("Status");
      HolidayStatButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            HolidayStatButtonActionPerformed(evt);
         }
      });

      waitlistButton.setText("WaitList Status");
      waitlistButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            waitlistButtonActionPerformed(evt);
         }
      });

      resultTable.setModel(new javax.swing.table.DefaultTableModel(
         new Object [][] {
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null}
         },
         new String [] {
            "Title 1", "Title 2", "Title 3", "Title 4"
         }
      ));
      resultTable.setEnabled(false);
      jScrollPane2.setViewportView(resultTable);

      javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
      jPanel2.setLayout(jPanel2Layout);
      jPanel2Layout.setHorizontalGroup(
         jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel2Layout.createSequentialGroup()
            .addGap(160, 160, 160)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
               .addComponent(jLabel2)
               .addComponent(HolidayLabel1))
            .addGap(18, 18, 18)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(MagicianComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(HolidayComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(36, 36, 36)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(waitlistButton)
               .addComponent(MagicStatButton)
               .addComponent(HolidayStatButton))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 782, Short.MAX_VALUE)
            .addContainerGap())
      );
      jPanel2Layout.setVerticalGroup(
         jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(jPanel2Layout.createSequentialGroup()
            .addGap(17, 17, 17)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(MagicianComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(jLabel2)
               .addComponent(MagicStatButton))
            .addGap(18, 18, 18)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(HolidayComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(HolidayLabel1)
               .addComponent(HolidayStatButton))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(waitlistButton)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
            .addContainerGap())
      );

      Status.addTab("Status", jPanel2);

      StatusArea.setColumns(20);
      StatusArea.setRows(5);
      jScrollPane3.setViewportView(StatusArea);

      clearButton.setText("Clear");
      clearButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            clearButtonActionPerformed(evt);
         }
      });

      dropText.setText("Clear TextArea:");

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addGap(276, 276, 276)
            .addComponent(Magiclabel)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(dropText)
            .addGap(26, 26, 26)
            .addComponent(clearButton)
            .addGap(341, 341, 341))
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
               .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(Status))
            .addGap(19, 19, 19))
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(Magiclabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(Status, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(24, 24, 24)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(dropText)
               .addComponent(clearButton))
            .addContainerGap(22, Short.MAX_VALUE))
      );

      pack();
   }// </editor-fold>//GEN-END:initComponents

   private void MagicianComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MagicianComboBox1ActionPerformed
      // TODO add your handling code here:
   }//GEN-LAST:event_MagicianComboBox1ActionPerformed

   private void MagicStatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MagicStatButtonActionPerformed

      statusMagician();

   }//GEN-LAST:event_MagicStatButtonActionPerformed

   private void CnameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CnameTextFieldActionPerformed


   }//GEN-LAST:event_CnameTextFieldActionPerformed

   private void BookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookButtonActionPerformed

      java.sql.Timestamp currentTimestamp = new java.sql.Timestamp(Calendar.getInstance().getTime().getTime());
      Book.addBooking((String) HolidayComboBox.getSelectedItem(), CnameTextField.getText(), Magician.getFreeMagician((String) HolidayComboBox.getSelectedItem()), currentTimestamp);
      Customer.addCustomer(CnameTextField.getText());// add customer to customer table
      CnameTextField.setText("");
      displaybktable();
      statusWaitlist();
   }//GEN-LAST:event_BookButtonActionPerformed

   private void HolidayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HolidayComboBoxActionPerformed
      // TODO add your handling code here:
   }//GEN-LAST:event_HolidayComboBoxActionPerformed

   private void HolidayStatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HolidayStatButtonActionPerformed

      statusHoliday();

   }//GEN-LAST:event_HolidayStatButtonActionPerformed

   private void waitlistButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waitlistButtonActionPerformed

      statusWaitlist();

   }//GEN-LAST:event_waitlistButtonActionPerformed

   private void addMagButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMagButtonActionPerformed

      Magician.addMagician(addMagTextBox.getText());

      for (int i = 0; i < HolidayComboBox.getItemCount(); i++) {
         WaitlistEntry earliestentry = WaitingList.getFirstOnWaitlist(HolidayComboBox.getItemAt(i).toString());
         if (earliestentry != null) {
            Book.addBooking(HolidayComboBox.getItemAt(i).toString(), earliestentry.getCustomer(), addMagTextBox.getText(), earliestentry.getTimestamp());
         }

      }
 
      //clear text box
      addMagTextBox.setText("");

      updateComponents();

   }//GEN-LAST:event_addMagButtonActionPerformed

   private void DropMagButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DropMagButtonActionPerformed
      // TODO add your handling code here:
      ArrayList<Booking> customerbookings = Book.getBookingByMagician(dropMagCbox.getSelectedItem().toString());
      Magician.dropMagician(dropMagCbox.getSelectedItem().toString());

      for (Booking c : customerbookings) {
         Book.addBooking(c.getHoliday(), c.getCustomer(), Magician.getFreeMagician(c.getHoliday()), c.getTimestamp());
      }

      updateComponents();
      statusWaitlist();
      statusMagician();
      statusHoliday();

   }//GEN-LAST:event_DropMagButtonActionPerformed

   private void addHolidayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addHolidayButtonActionPerformed
      // TODO add your handling code here:

      Holiday.addHoliday(addHolidayTextField.getText());

      //clear text field
      addHolidayTextField.setText("");
      updateComponents();
   }//GEN-LAST:event_addHolidayButtonActionPerformed

   private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed

      StatusArea.setText("");
   }//GEN-LAST:event_clearButtonActionPerformed

   private void CancelBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelBookingActionPerformed
      // TODO add your handling code here:

      String cancelledHoliday = "";

      if (subTabbedPane.getSelectedIndex() == 0) {
         int cellColumn = 0;
         int cellRow = bkTable.getSelectedRow();
         cancelledHoliday = Customer.cancelCustomer(bkTable.getValueAt(cellRow, cellColumn).toString());

      } else {
         int cellColumn = 0;
         int cellRow = WaitlistTable.getSelectedRow();
         cancelledHoliday = Customer.cancelCustomer(WaitlistTable.getValueAt(cellRow, cellColumn).toString());

      }

      if (cancelledHoliday != null) {
         WaitlistEntry e = WaitingList.getFirstOnWaitlist(cancelledHoliday);//hcmt
         if (e != null) {
            Book.addBooking(e.getHoliday(), e.getCustomer(), Magician.getFreeMagician(cancelledHoliday), e.getTimestamp());
         }
      }

      updateComponents();
      statusWaitlist();
   }//GEN-LAST:event_CancelBookingActionPerformed

   /**
    * @param args the command line arguments
    */
   public static void main(String args[]) {
      /* Set the Nimbus look and feel */
      //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
       * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
       */
      try {
         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
               javax.swing.UIManager.setLookAndFeel(info.getClassName());
               break;
            }
         }
      } catch (ClassNotFoundException ex) {
         java.util.logging.Logger.getLogger(MagicanFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (InstantiationException ex) {
         java.util.logging.Logger.getLogger(MagicanFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (IllegalAccessException ex) {
         java.util.logging.Logger.getLogger(MagicanFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (javax.swing.UnsupportedLookAndFeelException ex) {
         java.util.logging.Logger.getLogger(MagicanFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
      //</editor-fold>

      /* Create and display the form */
      java.awt.EventQueue.invokeLater(new Runnable() {
         public void run() {
            new MagicanFrame().setVisible(true);
         }
      });

   }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JButton BookButton;
   private javax.swing.JButton CancelBooking;
   private javax.swing.JLabel CnameLabel;
   private javax.swing.JTextField CnameTextField;
   private javax.swing.JButton DropMagButton;
   private javax.swing.JComboBox HolidayComboBox;
   private static javax.swing.JComboBox HolidayComboBox1;
   private javax.swing.JLabel HolidayLabel;
   private javax.swing.JLabel HolidayLabel1;
   private javax.swing.JButton HolidayStatButton;
   private javax.swing.JButton MagicStatButton;
   private static javax.swing.JComboBox MagicianComboBox1;
   private javax.swing.JLabel Magiclabel;
   private javax.swing.JTabbedPane Status;
   private static javax.swing.JTextArea StatusArea;
   private static javax.swing.JLabel StatusText;
   private static javax.swing.JTable WaitlistTable;
   private javax.swing.JButton addHolidayButton;
   private javax.swing.JTextField addHolidayTextField;
   private javax.swing.JButton addMagButton;
   private javax.swing.JTextField addMagTextBox;
   private javax.swing.JPanel add_drop_Panel;
   private static javax.swing.JTable bkTable;
   private javax.swing.ButtonGroup buttonGroup1;
   private javax.swing.ButtonGroup buttonGroup2;
   private javax.swing.ButtonGroup buttonGroup3;
   private javax.swing.JButton clearButton;
   private static javax.swing.JComboBox dropMagCbox;
   private javax.swing.JLabel dropText;
   private javax.swing.JLabel jLabel1;
   private javax.swing.JLabel jLabel2;
   private javax.swing.JLabel jLabel3;
   private javax.swing.JLabel jLabel4;
   private javax.swing.JLabel jLabel5;
   private javax.swing.JPanel jPanel1;
   private javax.swing.JPanel jPanel2;
   private javax.swing.JPanel jPanel3;
   private javax.swing.JPanel jPanel4;
   private javax.swing.JScrollPane jScrollPane1;
   private javax.swing.JScrollPane jScrollPane2;
   private javax.swing.JScrollPane jScrollPane3;
   private javax.swing.JScrollPane jScrollPane4;
   private static javax.swing.JTable resultTable;
   private javax.swing.JTabbedPane subTabbedPane;
   private javax.swing.JButton waitlistButton;
   // End of variables declaration//GEN-END:variables

   public static void setStatusText(String message) {
      //StatusArea.setText("");
      String msg = String.format(message);
      StatusArea.append(msg);
   }

//display magicians on table
   public static void statusMagician() {
      ArrayList<Booking> allBookings;   //array of bookings

      allBookings = Book.getBookingByMagician((String) MagicianComboBox1.getSelectedItem());

      DefaultTableModel model = new DefaultTableModel();
      model.setRowCount(0);//clear table
      Object[] columnName = new Object[4];

      columnName[0] = "Magician";
      columnName[1] = "Holiday";
      columnName[2] = "Customer";
      columnName[3] = "TimeStamp";

      model.setColumnIdentifiers(columnName);

      Object[] rowData = new Object[4];

      for (Booking b : allBookings) {
         rowData[0] = b.getMagician();
         rowData[1] = b.getHoliday();
         rowData[2] = b.getCustomer();
         rowData[3] = b.getTimestamp();

         model.addRow(rowData);
         
      }
      resultTable.setModel(model);
   }

//display HOliday status on table
   public static void statusHoliday() {
      ArrayList<Booking> allBookings;   //array of bookings

      allBookings = Book.getBookingByHoliday((String) HolidayComboBox1.getSelectedItem());

      DefaultTableModel model = new DefaultTableModel();
      model.setRowCount(0);//clear table
      Object[] columnName = new Object[4];

      columnName[0] = "Holiday";
      columnName[1] = "Magician";
      columnName[2] = "Customer";
      columnName[3] = "TimeStamp";

      model.setColumnIdentifiers(columnName);

      Object[] rowData = new Object[4];

      for (Booking b : allBookings) {
         rowData[0] = b.getHoliday();
         rowData[1] = b.getMagician();
         rowData[2] = b.getCustomer();
         rowData[3] = b.getTimestamp();

         model.addRow(rowData);
         
      }
      resultTable.setModel(model);
   }

//display waitlist on table
   public static void statusWaitlist() {
      ArrayList<WaitlistEntry> waitList;
      waitList = WaitingList.getWaitList();

      DefaultTableModel model = new DefaultTableModel();
      model.setRowCount(0);//clear table

      Object[] columnName = new Object[3];

      columnName[0] = "Customer";
      columnName[1] = "Holiday";
      columnName[2] = "TimeStamp";

      model.setColumnIdentifiers(columnName);

      Object[] rowData = new Object[3];

      for (WaitlistEntry w : waitList) {
         rowData[0] = w.getCustomer();
         rowData[1] = w.getHoliday();
         rowData[2] = w.getTimestamp();

         model.addRow(rowData);

      }
      resultTable.setModel(model);
      WaitlistTable.setModel(model);
   }

   public static void displaybktable() {
      ArrayList<Booking> allbooking;
      allbooking = Book.getallBookings();

      DefaultTableModel model = new DefaultTableModel();
      model.setRowCount(0);//clear table

      Object[] columnName = new Object[4];

      columnName[0] = "Customer";
      columnName[1] = "Magician";
      columnName[2] = "Holiday";
      columnName[3] = "TimeStamp";

      model.setColumnIdentifiers(columnName);

      Object[] rowData = new Object[4];

      for (Booking w : allbooking) {
         rowData[0] = w.getCustomer();
         rowData[1] = w.getMagician();
         rowData[2] = w.getHoliday();
         rowData[3] = w.getTimestamp();

         model.addRow(rowData);
         
      }
      bkTable.setModel(model);
   }

   public void updateComponents() {
      //clear textbox
      MagicianComboBox1.removeAllItems();
      HolidayComboBox.removeAllItems();
      HolidayComboBox1.removeAllItems();
      dropMagCbox.removeAllItems();

      int size = Magician.getMagican().size();
      for (int i = 0; i < size; i++) {
         MagicianComboBox1.addItem(Magician.getMagican().get(i));
         dropMagCbox.addItem(Magician.getMagican().get(i));
      }

      int size1 = Holiday.getHoliday().size();
      for (int i = 0; i < size1; i++) {
         HolidayComboBox.addItem(Holiday.getHoliday().get(i));
         HolidayComboBox1.addItem(Holiday.getHoliday().get(i));
      }

      //display bkTable on startup
      displaybktable();
      statusWaitlist();
   }

}
